{"version":3,"sources":["components/Dashboard/dashboard.module.css","components/Registration/registration.module.css","components/Home/homedetail.module.css","components/NavBar/navbar.module.css","components/WarningMessage/warningmessage.module.css","constants.js","components/NavBar/searchBar.jsx","components/NavBar/index.jsx","components/Registration/RegistrationForm.jsx","components/Registration/index.jsx","components/Login/LoginForm.jsx","components/Login/LoginGuest.jsx","components/Login/index.jsx","components/LoginMiddle/index.jsx","components/Dashboard/UserListStats.jsx","components/Dashboard/UserMovieStats.jsx","components/Dashboard/index.jsx","components/Logout/index.jsx","components/WarningMessage/index.jsx","components/Home/HomeDetailPage.jsx","components/Home/HomeDetailSideBarTab.jsx","components/Home/index.jsx","components/MoviePage/index.jsx","App.jsx","registerServiceWorker.js","index.jsx","components/MoviePage/moviepage.module.css","components/Login/login.module.css"],"names":["module","exports","CONSTANTS","ERROR_MESSAGE","LIST_DELETE","LIST_ADD","LIST_GET","LIST_EMPTY_MESSAGE","REGISTER_ADD","GRID_GET","MASTERDETAIL_GET","ENDPOINT","REGISTRATION","LOGIN","LOGINMIDDLE","LIST","DASHBOARD","LOGOUT","GRID","MASTERDETAIL","KEY","APIKEY","posterWidth","posterMoviePageWidth","SearchBar","state","pagePathname","isVisible","searchText","titles","ids","poster_paths","release_dates","descriptions","popularitys","vote_counts","vote_avgs","updateMovieData","movieDbAPI","fetch","then","response","ok","Error","statusText","json","apiData","data","results","titlesData","idsData","posterPathData","releaseDatesData","descriptionsData","popularityData","voteCountsData","voteAvgsData","forEach","movie","push","setState","catch","error","warningMessageOpen","warningMessageText","searchResults","searchAPI","map","title","i","movieYear","substring","moviePath","replace","toLowerCase","key","Link","className","styles","resultLink","to","pathname","id","poster_path","release_date","description","popularity","vote_count","vote_avg","handleClickOutside","handleChange","e","target","value","this","props","location","unlisten","history","listen","action","newPathname","searchResultContainerStyle","backgroundColor","SearchContainer","type","onChange","placeholder","searchResultContainer","style","Component","withRouter","onClickOutside","NavBar","isAuthenticated","setUserAuthentication","result","err","console","message","Fragment","classname","navbarContainer","skipLink","href","RegistrationForm","user","email","password","name","formContainer","method","formGroup","for","aria-label","required","submitContainer","Registration","container","wrapper","heading","noAccContainer","noAccText","LoginForm","LoginGuest","guestFormContainer","submitContainerGuest","formGroupGuest","Login","LoginMiddle","authenticated","renderRedirect","Redirect","window","sessionStorage","setItem","UserListStats","isListClicked","userMovies","handleClick","dropDown","color","size","dropDownContent","contentContainer","class","classnames","NoContentBox","listWrapper","onClick","lineButton","line","listLine","arrow","UserMovieStats","measureOfTime","movieStatsContainer","Dashboard","num_movies_watched","avg_rating_movies_watched","avg_length_movies_watched","getItem","pageContainer","userTitle","logoutLink","listContainer","Logout","redirect","headers","body","JSON","stringify","removeItem","WarningMessage","open","text","onWarningClose","warningPosition","role","aria-hidden","MasterDetailPage","movieItems","_","movieWrapper","background","backgroundRepeat","backgroundPosition","height","width","movieItem","movieItemContent","pageTitle","MasterDetailSideBarTab","selectPage","pageName","APIurl","sidebarText","Home","pageNames","currentPageName","imtbAPIurls","currentAPIurl","pageMovies","sidebarStyle","sidebar","handleWarningClose","sidebarWrapper","MoviePage","parseFloat","toFixed","moviePageWrapper","movieContainer","moviePoster","src","alt","movieInfoContainer","movieTitle","movieReleaseContainer","movieStatsLabel","movieStatsValue","movieOverviewContainer","movieOverviewLabel","movieOverview","movieStats","App","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b02b8dcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"dashboard_pageContainer__8Ibjc\",\"userTitle\":\"dashboard_userTitle__3zGmW\",\"logoutLink\":\"dashboard_logoutLink__gisOy\",\"movieStatsContainer\":\"dashboard_movieStatsContainer__1-hh3\",\"listContainer\":\"dashboard_listContainer__31B-T\",\"listWrapper\":\"dashboard_listWrapper__1O4Za\",\"listLine\":\"dashboard_listLine__1lVXZ\",\"lineButton\":\"dashboard_lineButton__Im4Eh\",\"line\":\"dashboard_line__3vnZ2\",\"arrow\":\"dashboard_arrow__xoM4M\",\"contentContainer\":\"dashboard_contentContainer__1rDY7\",\"NoContentBox\":\"dashboard_NoContentBox__1VuvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"registration_container__3sWmU\",\"wrapper\":\"registration_wrapper__3gx6V\",\"heading\":\"registration_heading__21Oga\",\"formContainer\":\"registration_formContainer__2zcVE\",\"formGroup\":\"registration_formGroup__2InCN\",\"submitContainer\":\"registration_submitContainer__238LM\",\"noAccContainer\":\"registration_noAccContainer__49xrr\",\"noAccText\":\"registration_noAccText__2_oiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"homedetail_sidebar__3sv-V\",\"sidebarText\":\"homedetail_sidebarText__MIMMZ\",\"sidebarWrapper\":\"homedetail_sidebarWrapper__FeWjU\",\"pageTitle\":\"homedetail_pageTitle__3K5i3\",\"title\":\"homedetail_title__1TBms\",\"heading\":\"homedetail_heading__1ZoyA\",\"movieBodyContainer\":\"homedetail_movieBodyContainer__3-i4n\",\"movieItem\":\"homedetail_movieItem__6X6OB\",\"movieItemContent\":\"homedetail_movieItemContent__3mC_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"navbar_navbarContainer__2yGpY\",\"skipLink\":\"navbar_skipLink__3TdC_\",\"SearchContainer\":\"navbar_SearchContainer__1asXB\",\"searchResultContainer\":\"navbar_searchResultContainer__QdiJF\",\"searchResults\":\"navbar_searchResults__1peqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningPosition\":\"warningmessage_warningPosition__26PMU\"};","const CONSTANTS = {};\n\nCONSTANTS.ERROR_MESSAGE = {};\n\nCONSTANTS.ERROR_MESSAGE.LIST_DELETE = \"Request to delete list item failed:\";\nCONSTANTS.ERROR_MESSAGE.LIST_ADD = \"Request to add list item failed:\";\nCONSTANTS.ERROR_MESSAGE.LIST_GET = \"Request to get list items failed:\";\nCONSTANTS.ERROR_MESSAGE.LIST_EMPTY_MESSAGE = \"Please enter a valid message\";\n\nCONSTANTS.ERROR_MESSAGE.REGISTER_ADD = \"Request to add error item failed:\";\n\nCONSTANTS.ERROR_MESSAGE.GRID_GET = \"Request to get grid text failed:\";\n\nCONSTANTS.ERROR_MESSAGE.MASTERDETAIL_GET =\n  \"Request to get master detail text failed:\";\n\nCONSTANTS.ENDPOINT = {};\n\nCONSTANTS.ENDPOINT.REGISTRATION = \"/api/registration\";\n\nCONSTANTS.ENDPOINT.LOGIN = \"/api/login\";\n\nCONSTANTS.ENDPOINT.LOGINMIDDLE = \"/api/loginmiddle\";\n\nCONSTANTS.ENDPOINT.LIST = \"/api/list\";\n\nCONSTANTS.ENDPOINT.DASHBOARD = \"/api/dashboard\";\n\nCONSTANTS.ENDPOINT.LOGOUT = \"/api/logout\";\n\nCONSTANTS.ENDPOINT.GRID = \"/api/grid\";\n\nCONSTANTS.ENDPOINT.MASTERDETAIL = \"/api/masterdetail\";\n\nCONSTANTS.KEY = {};\n\nCONSTANTS.KEY.APIKEY = \"4efc28cbfdabb5b3bfe69e60f686dcf6\";\n\nexport default CONSTANTS;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CONSTANTS from \"../../constants\";\nimport styles from \"./navbar.module.css\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { withRouter } from 'react-router';\n\nconst posterWidth = 185;\nconst posterMoviePageWidth = 400;\n\nclass SearchBar extends Component {\n  state = {\n    pagePathname: \"/\",\n    isVisible: false,\n    searchText: \"\",\n    titles: [],\n    ids: [],\n    poster_paths: [],\n    release_dates: [],\n    descriptions: [],\n    popularitys: [],\n    vote_counts: [],\n    vote_avgs: []\n  }\n\n\n  updateMovieData = (movieDbAPI) => {\n    fetch(movieDbAPI)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(apiData => {\n        const data = apiData.results; //api data\n\n        //create space to store data \n        let titlesData = [];\n        let idsData = [];\n        let posterPathData = [];\n        let releaseDatesData = [];\n        let descriptionsData = [];\n        let popularityData = [];\n        let voteCountsData = [];\n        let voteAvgsData = [];\n        //add each data to corresponding space\n        data.forEach((movie) => {\n          titlesData.push(movie[\"title\"]) //movie titles\n          idsData.push(movie[\"id\"]) //movie id\n          posterPathData.push(`https://image.tmdb.org/t/p/w${posterWidth}${movie[\"poster_path\"]}`) //movie poster path\n          releaseDatesData.push(movie[\"release_date\"]) //movie release dates\n          descriptionsData.push(movie[\"overview\"]) //movie description\n          popularityData.push(movie[\"popularity\"])\n          voteCountsData.push(movie[\"vote_count\"])\n          voteAvgsData.push(movie[\"vote_average\"])\n        })\n        //modify state data to api data\n        this.setState({\n          titles: titlesData,\n          ids: idsData,\n          poster_paths: posterPathData,\n          release_dates: releaseDatesData,\n          descriptions: descriptionsData,\n          popularitys: popularityData,\n          vote_counts: voteCountsData,\n          vote_avgs: voteAvgsData\n        })\n      })\n      .catch(error =>\n        this.setState({\n          warningMessageOpen: true,\n          warningMessageText: `${\n            CONSTANTS.ERROR_MESSAGE.MASTERDETAIL_GET\n            } ${error}`\n        })\n      );\n  }\n\n  searchResults = () => {\n    //get user search input\n    const { searchText } = this.state;\n\n    //if there is something that the user wants to search - make results appear\n    if (searchText) {\n      // let testSearchAPI = `https://api.themoviedb.org/3/movie/now_playing?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`;\n      //IMDB search API using user search attribtue\n      let searchAPI = `https://api.themoviedb.org/3/search/movie?api_key=4efc28cbfdabb5b3bfe69e60f686dcf6&language=en-US&query=${searchText}&page=1&include_adult=false`\n      //update data\n      this.updateMovieData(searchAPI);\n      //get movie data\n      const { titles, ids, poster_paths, release_dates, descriptions,\n        popularitys, vote_counts, vote_avgs } = this.state;\n      //iterate through movies\n      return titles.map((title, i) => {\n        //get movie year\n        let movieDate = release_dates[i] || \"\";\n        let movieYear = movieDate.substring(0, 4);\n        //get movie path\n        let moviePath = title.replace(/\\s+/g, '-').toLowerCase();\n        return (\n          <div key={ids[i]}>\n            <Link className={styles.resultLink} to={{\n              pathname: `/movie/${moviePath}`,\n              state: {\n                title: `${titles[i]}`,\n                id: `${ids[i]}`,\n                poster_path: `${poster_paths[i].replace(posterWidth, posterMoviePageWidth)}`,\n                release_date: `${release_dates[i]}`,\n                description: `${descriptions[i]}`,\n                popularity: `${popularitys[i]}`,\n                vote_count: `${vote_counts[i]}`,\n                vote_avg: `${vote_avgs[i]}`\n              }\n            }}>\n              <div className={styles.searchResults}>\n                {title} ({movieYear})\n              </div>\n            </Link>\n          </div>\n        )\n      })\n    }\n  }\n\n  //handle page change to remove text in input\n  componentDidMount() {\n    this.setState({ pagePathname: this.props.location.pathname })\n  }\n\n  //handle clicking outside component - remove component\n  handleClickOutside = () => {\n    this.setState({ searchText: \"\" });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchText: e.target.value });\n    //if there is texts, make the results visible\n    if (this.state.searchText) {\n      this.setState({ isVisible: true })\n    } else {\n      this.setState({ isVisible: false })\n    }\n  }\n\n  //page change\n  componentWillMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      let newPathname = location.pathname;\n      //if there is a different page - delete the search box text value\n      if (this.state.pagePathname !== newPathname) {\n        this.setState({ searchText: \"\" })\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    let searchResultContainerStyle = this.state.searchText ?\n      { backgroundColor: \"rgb(0, 123, 255, 0.80)\" } :\n      { backgroundColor: \"transparent\" }\n\n    return (\n      <div className={styles.SearchContainer}>\n        <input type=\"text\" onChange={this.handleChange} placeholder=\"Search Movie\"></input>\n        <div className={styles.searchResultContainer} style={searchResultContainerStyle}>\n          {this.searchResults()}\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\n\n\nexport default withRouter(onClickOutside(SearchBar));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./navbar.module.css\";\nimport CONSTANTS from \"../../constants\";\nimport SearchBar from \"./searchBar\";\n// import { withRouter } from 'react-router';\n\n\nclass NavBar extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  // componentWillMount() {\n  //   this.unlisten = this.props.history.listen((location, action) => {\n  //     console.log(\"on route change\", location.pathname);\n  //   });\n  // }\n  // componentWillUnmount() {\n  //   this.unlisten();\n  // }\n\n  componentDidMount() {\n    this.setUserAuthentication();\n  }\n\n  setUserAuthentication = () => {\n    fetch(CONSTANTS.ENDPOINT.DASHBOARD)\n      .then(response => {\n        if (!response.ok) { throw Error(response.statusText); }\n        return response.json();\n      })\n      .then(result => {\n        //set page authentication to user authentication\n        this.setState({\n          isAuthenticated: result.isAuthenticated\n        })\n      })\n      .catch(err => console.error(err.message));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"navBar-Container\" classname={styles.navbarContainer}>\n          <div className={styles.skipLink}>\n            <a href=\"#mainContent\">Skip to Main Content</a>\n          </div>\n          <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              Movie App\n            </Link>\n            <SearchBar />\n            <div className=\"navbar-nav\">\n              <Link className=\"nav-item nav-link active\" to=\"/\">\n                Home\n            </Link>\n              <Link className=\"nav-item nav-link active\" to=\"/dashboard\">\n                Dashboard\n            </Link>\n            </div>\n          </nav>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default NavBar;","import React, { Component } from \"react\";\nimport styles from \"./registration.module.css\";\nimport CONSTANTS from \"../../constants\";\n\nexport default class RegistrationForm extends Component {\n  state = {\n    user: \"\",\n    email: \"\",\n    password: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n\t}\n\n  render() {\n    return (\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form action={CONSTANTS.ENDPOINT.REGISTRATION} method=\"post\">\n\t\t\t\t\t<div className={styles.formGroup}>\n\t\t\t\t\t\t<label id='user-label' for='user'>Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"user\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.user}\n\t\t\t\t\t\tname=\"user\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Add username here...\"\n\t\t\t\t\t\taria-label=\"Add username here...\"\n\t\t\t\t\t\trequired />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.formGroup}>\n\t\t\t\t\t\t<label id='email-label' for='email'>Email</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Add email here...\"\n\t\t\t\t\t\taria-label=\"Add email here...\"\n\t\t\t\t\t\trequired />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.formGroup}>\n\t\t\t\t\t\t<label id='password-label' for='password'>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Add password here...\"\n\t\t\t\t\t\taria-label=\"Add password here...\"\n\t\t\t\t\t\trequired />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.submitContainer}>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RegistrationForm from\"./RegistrationForm\";\nimport styles from \"./registration.module.css\";\n\nexport default class Registration extends Component {\n  render() {\n    return (\n      <main id=\"mainContent\" >\n        <div className={styles.container}>\n          <div className={styles.wrapper}>\n            <header>\n              <h1 className={styles.heading}>Register for the Movie Search App</h1>\n            </header>\n            <RegistrationForm \n            />\n            <div className={styles.noAccContainer}> \n              <p className={styles.noAccText}>\n                Already have an account? You can login\n                <Link className=\"nav-item active\" to=\"login\"> here</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CONSTANTS from \"../../constants\";\nimport styles from \"./login.module.css\";\n// const axios = require('axios');\n\nexport default class LoginForm extends Component {\n\tstate = {\n    user: \"\",\n    password: \"\"\n\t}\n\t\n\thandleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form action={CONSTANTS.ENDPOINT.LOGIN} method=\"post\">\n\t\t\t\t\t<div className={styles.formGroup}>\n\t\t\t\t\t\t<label id='user-label' for='user'>Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"user\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.user}\n\t\t\t\t\t\tname=\"user\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Enter username here...\"\n\t\t\t\t\t\taria-label=\"Enter username here...\"\n\t\t\t\t\t\trequired />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.formGroup}>\n\t\t\t\t\t\t<label id='password-label' for='password'>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Enter password here...\"\n\t\t\t\t\t\taria-label=\"Enter password here...\"\n\t\t\t\t\t\trequired />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.submitContainer}>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from \"react\";\nimport CONSTANTS from \"../../constants\";\nimport styles from \"./login.module.css\";\n\nexport default class LoginGuest extends Component {\n  state = {\n    user: \"guest\",\n    password: \"guestpass\"\n  }\n\n  render() {\n    return (\n      <div className={styles.guestFormContainer}>\n        <form action={CONSTANTS.ENDPOINT.LOGIN} method=\"post\">\n          <div className={styles.submitContainerGuest}>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Guest Login\n\t\t\t\t\t\t</button>\n          </div>\n          <div className={styles.formGroupGuest}>\n            <input\n              id=\"guesUser\"\n              type=\"text\"\n              value={this.state.user}\n              name=\"user\"\n              required />\n          </div>\n          <div className={styles.formGroupGuest}>\n            <input\n              id=\"guestPassword\"\n              type=\"password\"\n              value={this.state.password}\n              name=\"password\"\n              required />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport LoginGuest from \"./LoginGuest\";\nimport styles from \"./login.module.css\";\n\n\nexport default class Login extends Component {\n  render() {\n    return (\n      <main id=\"mainContent\" >\n        <div className={styles.container}>\n          <div className={styles.wrapper}>\n            <header>\n              <h1 className={styles.heading}>Login to the Movie Search App</h1>\n            </header>\n            <LoginForm />\n            <div className={styles.noAccContainer}>\n              <p className={styles.noAccText}>\n                Don't have an account? You can register\n                <Link className=\"nav-item active\" to=\"registration\"> here</Link>\n              </p>\n            </div>\n            <div className={styles.noAccContainer} >\n              <p className={styles.noAccText} >\n                Don't feel like making an account? You can login as a guest\n                <LoginGuest />\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\n// user = \"guest\"\n// email = \"guest@guest.com\"\n// password = \"guestpass\" ","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; \nimport CONSTANTS from \"../../constants\";\n\n//user verification component\nexport default class LoginMiddle extends Component {\n  state = {\n    user: \"\",\n    authenticated: false\n  }\n  //redirect user if redirect state is true\n  renderRedirect = () => {\n    if (this.state.user) {\n      return <Redirect to='/dashboard' />\n    } \n    return <Redirect to='/login' />\n  }\n\n  //{this.renderRedirect()}\n\n  render() {\n    //get current user\n    fetch(CONSTANTS.ENDPOINT.DASHBOARD)\n      .then(response => {\n        if (!response.ok) { throw Error(response.statusText); }\n        return response.json();\n      })\n      //set state of user\n\t\t\t.then(result => {\n        this.setState({\n          user: result.user,\n          authenticated: result.isAuthenticated\n        })\n      })\n      .catch(err => console.error(err));\n\n      //check if a user exist\n      if (this.state.user) {\n        //set the session storage of the user\n        window.sessionStorage.setItem(\"isUserAuthenticated\", true);\n        return <Redirect to='/dashboard' />\n      } \n\n    return (\n      <main id=\"LoginMiddleContent\">\n      </main>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport styles from \"./dashboard.module.css\";\nimport classnames from \"classnames\";\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { ChevronDown } from 'react-bootstrap-icons';\n\nexport default class UserListStats extends Component {\n  state = {\n    isListClicked: false,\n    userMovies: []\n  }\n\n\n  //change status of drop down\n  handleClick = () => this.setState({ isListClicked: !this.state.isListClicked })\n\n  //change arrow based on dropw down\n  dropDown = () => {\n    if (this.state.isListClicked) {\n      return <ChevronDown color=\"royalblue\" size={35} />;\n    } else {\n      return <ChevronLeft color=\"royalblue\" size={35} />;\n    }\n  }\n\n  //user movies content when on dropdown\n  dropDownContent = () => {\n    if (this.state.isListClicked) {\n      return (\n        <div className={styles.contentContainer}>\n          <div class=\"row\">\n            <div className={classnames(styles.NoContentBox, \"col-3\")}>No Content Yet</div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <div className={styles.listWrapper}>\n        <div class=\"titleContainer\">\n          <h2>{this.props.title}</h2>\n        </div>\n        <button id=\"user-stats-container\" onClick={this.handleClick} className={classnames(styles.lineButton, \"col-12\")}>\n          <div class=\"row\">\n            <div className={styles.line}>\n              <div className={styles.listLine}></div>\n            </div>\n            <div className={classnames(styles.arrow)}>\n              {this.dropDown()}\n            </div>\n          </div>\n        </button>\n        {this.dropDownContent()}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport styles from \"./dashboard.module.css\";\nimport classnames from \"classnames\";\n\nexport default function UserMovieStats({ title, data, measureOfTime }) {\n  return (\n    <div className={classnames(styles.movieStatsContainer, \"col\", \"text-center\")}>\n      <div class=\"col\">\n        <h1>{data} {measureOfTime}</h1>\n        <p>{title}</p>\n      </div>\n    </div>\n  )\n}","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport CONSTANTS from \"../../constants\";\nimport styles from \"./dashboard.module.css\";\nimport classnames from \"classnames\";\nimport UserListStats from \"./UserListStats\";\nimport UserMovieStats from \"./UserMovieStats\";\n\nexport default class Dashboard extends Component {\n\tstate = {\n\t\tuser: \"\",\n\t\temail: \"\",\n\t\tisAuthenticated: true,\n\t\tnum_movies_watched: 0,\n\t\tavg_rating_movies_watched: 0.0,\n\t\tavg_length_movies_watched: 0\n\t}\n\t// // get user info from api\n\tcomponentDidMount() {\n\t\tfetch(CONSTANTS.ENDPOINT.DASHBOARD)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) { throw Error(response.statusText); }\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuser: result.user,\n\t\t\t\t\temail: result.email,\n\t\t\t\t\tisAuthenticated: result.isAuthenticated\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAuthenticated: false\n\t\t\t\t})\n\t\t\t});\n\t}\n\t//{this.renderRedirect()}\n\n\trender() {\n\t\t//check if the user is authenticated\n\t\tconst isUserAuthenticated = window.sessionStorage.getItem(\"isUserAuthenticated\");\n\t\tif (!isUserAuthenticated) {\n\t\t\treturn <Redirect to='/login' />\n\t\t}\n\n\t\tconst { num_movies_watched, avg_rating_movies_watched, avg_length_movies_watched } = this.state;\n\n\t\treturn (\n\t\t\t<main id=\"DashboardContent\">\n\t\t\t\t<div className={classnames(styles.pageContainer, \"container\")}>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-3 border-right border-primary\">\n\t\t\t\t\t\t\t<h1 className={styles.userTitle}>{this.state.user}'s Dashboard</h1>\n\t\t\t\t\t\t\t<Link className={classnames(styles.logoutLink, \"nav-item\", \"nav-link\", \"active\")} to=\"logout\">logout</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-9 pl-5\">\n\t\t\t\t\t\t\t<div id=\"user-stats-container\" class=\"row\">\n\t\t\t\t\t\t\t\t<UserMovieStats\n\t\t\t\t\t\t\t\t\ttitle={\"Number of Movies Watched\"}\n\t\t\t\t\t\t\t\t\tdata={num_movies_watched}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UserMovieStats\n\t\t\t\t\t\t\t\t\ttitle={\"Avgerage Rating of Movies Watched\"}\n\t\t\t\t\t\t\t\t\tdata={avg_rating_movies_watched}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UserMovieStats\n\t\t\t\t\t\t\t\t\ttitle={\"Average Length of Movies Watched\"}\n\t\t\t\t\t\t\t\t\tdata={avg_length_movies_watched}\n\t\t\t\t\t\t\t\t\tmeasureOfTime={'mins'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"user-list-container\" className={styles.listContainer}>\n\t\t\t\t\t\t\t\t<UserListStats\n\t\t\t\t\t\t\t\t\ttitle={\"Favorite Movies\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UserListStats\n\t\t\t\t\t\t\t\t\ttitle={\"Favorite Actors/Actresses\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UserListStats\n\t\t\t\t\t\t\t\t\ttitle={\"Movie Playlist\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t)\n\t}\n}","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; \nimport CONSTANTS from \"../../constants\";\n\nexport default class Logout extends Component {\n  state = {\n    user: \"logout test person\",\n    redirect: false\n  }\n  //redirect user if redirect state is true\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  //{this.renderRedirect()}\n\n  render() {\n    //get current user\n    fetch(CONSTANTS.ENDPOINT.DASHBOARD)\n      .then(response => {\n        if (!response.ok) { throw Error(response.statusText); }\n        return response.json();\n      })\n      //set state of user\n\t\t\t.then(result => {\n        this.setState({\n          user: result.user\n        })\n      })\n      .then(() => {\n        //logout call to logout user - change authentication to false\n        fetch(CONSTANTS.ENDPOINT.LOGOUT,\n        {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify({ user: this.state.user })\n        })\n      })\n      .then(() => {\n        //set sessionStorage to false/ remove key\n        window.sessionStorage.removeItem(\"isUserAuthenticated\");\n      })\n      .then(() => {\n        //set redirect to true to redirect user\n        this.setState({\n          redirect: true\n        })\n        \n      })\n      .catch(err => console.error(err));\n\n\n    return (\n      <main id=\"LogoutContent\">\n        {this.renderRedirect()}\n      </main>\n    )\n  }\n}","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./warningmessage.module.css\";\r\n\r\n// A pop up message used to warn users about failed API calls to the back end\r\nexport default function WarningMessage({ open, text, onWarningClose }) {\r\n  return (\r\n    <React.Fragment>\r\n      {open && (\r\n        <div\r\n          className={classnames(\r\n            \"alert\",\r\n            \"alert-warning\",\r\n            \"ml-3\",\r\n            styles.warningPosition\r\n          )}\r\n          role=\"alert\"\r\n        >\r\n          {text}\r\n          <button\r\n            onClick={onWarningClose}\r\n            className=\"close ml-2\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import classnames from \"classnames\";\r\nimport styles from \"./homedetail.module.css\";\r\n\r\nconst posterWidth = 185;\r\nconst posterMoviePageWidth = 400;\r\n\r\nexport default class MasterDetailPage extends Component {\r\n  state = {\r\n    titles: []\r\n  }\r\n\r\n\r\n  movieItems = () => {\r\n    //get data \r\n    const { titles, ids, poster_paths, release_dates, descriptions,\r\n      popularitys, vote_counts, vote_avgs } = this.props;\r\n\r\n    //iterate though data\r\n    return titles.map((_, i) => {\r\n      //movie poster css\r\n      let movieWrapper = {\r\n        background: `url('${poster_paths[i]}')`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        height: \"auto\",\r\n        width: \"185px\",\r\n        height: \"280px\",\r\n        padding: \"0\"\r\n      }\r\n      //movie link\r\n      let moviePath = titles[i].replace(/\\s+/g, '-').toLowerCase();\r\n\r\n      return (\r\n        <div key={ids[i]} >\r\n          <div style={movieWrapper} className={styles.movieItem}>\r\n            <div className={styles.movieItemContent}>\r\n              <div>{titles[i]}</div>\r\n              <Link to={{\r\n                pathname: `movie/${moviePath}`,\r\n                state: {\r\n                  title: `${titles[i]}`,\r\n                  id: `${ids[i]}`,\r\n                  poster_path: `${poster_paths[i].replace(posterWidth, posterMoviePageWidth)}`,\r\n                  release_date: `${release_dates[i]}`,\r\n                  description: `${descriptions[i]}`,\r\n                  popularity: `${popularitys[i]}`,\r\n                  vote_count: `${vote_counts[i]}`,\r\n                  vote_avg: `${vote_avgs[i]}`\r\n                }\r\n              }}>see details</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { pageTitle } = this.props;\r\n\r\n    return (\r\n      <div className=\"col\">\r\n        {/* <div className={classnames(\"row\", styles.heading)}>\r\n          <div className=\"col\">\r\n            <h3 className=\"ml-3 mb-4\">{pageTitle}</h3>\r\n            (maybe put picture here)\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"row py-5\">\r\n            <h1>{pageTitle}</h1>\r\n          </div>\r\n\r\n          <div className=\"row w-100\">\r\n            {this.movieItems()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./homedetail.module.css\";\r\n// import imgGreyAvatar from \"../../images/GreyAvatar.svg\";\r\n\r\nexport default function MasterDetailSideBarTab({ selectPage, pageName, APIurl }) {\r\n  return (\r\n    <button\r\n      onClick={() => selectPage(pageName, APIurl)}\r\n      type=\"button\"\r\n      className={classnames(\r\n        \"list-group-item\",\r\n        \"list-group-item-action\",\r\n        styles.sidebarText\r\n      )}\r\n    >\r\n      {/* <img src={sampleOrder.imageSrc ? sampleOrder.imageSrc : imgGreyAvatar} alt=\"Default Grey Avatar\" className=\"mr-3\" /> */}\r\n      {pageName}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport WarningMessage from \"../WarningMessage\";\r\nimport HomeDetailPage from \"./HomeDetailPage\";\r\nimport HomeDetailSideBarTab from \"./HomeDetailSideBarTab\";\r\nimport styles from \"./homedetail.module.css\";\r\nimport CONSTANTS from \"../../constants\";\r\n\r\n\r\nconst posterWidth = 185;\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    pageNames: [\"Now Playing\", \"Most Popular\", \"Top Rated\", \"Upcoming\"],\r\n    currentPageName: \"Now Playing\",\r\n    imtbAPIurls: [`https://api.themoviedb.org/3/movie/now_playing?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`,\r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`,\r\n    `https://api.themoviedb.org/3/movie/top_rated?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`,\r\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`],\r\n    currentAPIurl: `https://api.themoviedb.org/3/movie/now_playing?api_key=${CONSTANTS.KEY.APIKEY}&language=en-US&page=1`,\r\n    pageMovies: [],\r\n    titles: [],\r\n    ids: [],\r\n    poster_paths: [],\r\n    release_dates: [],\r\n    descriptions: [],\r\n    popularity: [],\r\n    vote_counts: [],\r\n    vote_avgs: []\r\n  }\r\n\r\n  sidebarStyle = classnames(\r\n    \"col-2\",\r\n    \"p-0\",\r\n    \"border-right\",\r\n    styles.sidebar\r\n  )\r\n\r\n  updateMovieData = (movieDbAPI) => {\r\n    fetch(movieDbAPI)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(apiData => {\r\n        const data = apiData.results; //api data\r\n\r\n        //create space to store data \r\n        let titlesData = [];\r\n        let idsData = [];\r\n        let posterPathData = [];\r\n        let releaseDatesData = [];\r\n        let descriptionsData = [];\r\n        let popularityData = [];\r\n        let voteCountsData = [];\r\n        let voteAvgsData = [];\r\n        //add each data to corresponding space\r\n        data.forEach((movie) => {\r\n          titlesData.push(movie[\"title\"]) //movie titles\r\n          idsData.push(movie[\"id\"]) //movie id\r\n          posterPathData.push(`https://image.tmdb.org/t/p/w${posterWidth}${movie[\"poster_path\"]}`) //movie poster path\r\n          releaseDatesData.push(movie[\"release_date\"]) //movie release dates\r\n          descriptionsData.push(movie[\"overview\"]) //movie description\r\n          popularityData.push(movie[\"popularity\"])\r\n          voteCountsData.push(movie[\"vote_count\"])\r\n          voteAvgsData.push(movie[\"vote_average\"])\r\n        })\r\n        //modify state data to api data\r\n        this.setState({\r\n          titles: titlesData,\r\n          ids: idsData,\r\n          poster_paths: posterPathData,\r\n          release_dates: releaseDatesData,\r\n          descriptions: descriptionsData,\r\n          popularity: popularityData,\r\n          vote_counts: voteCountsData,\r\n          vote_avgs: voteAvgsData\r\n        })\r\n      })\r\n      .catch(error =>\r\n        this.setState({\r\n          warningMessageOpen: true,\r\n          warningMessageText: `${\r\n            CONSTANTS.ERROR_MESSAGE.MASTERDETAIL_GET\r\n            } ${error}`\r\n        })\r\n      );\r\n  }\r\n\r\n  // Get the sample data from the back end\r\n  componentDidMount() {\r\n    //initial movie data gathering\r\n    this.updateMovieData(this.state.currentAPIurl);\r\n  }\r\n\r\n  handleWarningClose = () => {\r\n    this.setState({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  }\r\n\r\n  selectPage = (pageName, APIurl) => {\r\n    this.setState({\r\n      currentPageName: pageName,\r\n      currentAPIurl: APIurl\r\n    });\r\n    //update current movie data\r\n    this.updateMovieData(APIurl);\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      pageNames,\r\n      currentPageName,\r\n      imtbAPIurls,\r\n      warningMessageOpen,\r\n      warningMessageText\r\n    } = this.state;\r\n\r\n    const { titles, ids, poster_paths, release_dates, descriptions,\r\n      popularity, vote_counts, vote_avgs } = this.state;\r\n\r\n    return (\r\n      <main id=\"mainContent\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className={this.sidebarStyle} >\r\n              <div className={classnames(\"list-group\", \"list-group-flush\", \"border-bottom\", styles.sidebarWrapper)}>\r\n                {pageNames.map((_, i) => (\r\n                  <HomeDetailSideBarTab\r\n                    selectPage={this.selectPage}\r\n                    pageName={pageNames[i]}\r\n                    APIurl={imtbAPIurls[i]}\r\n                    key={i}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <HomeDetailPage\r\n              pageTitle={currentPageName}\r\n              titles={titles}\r\n              ids={ids}\r\n              poster_paths={poster_paths}\r\n              release_dates={release_dates}\r\n              descriptions={descriptions}\r\n              popularitys={popularity}\r\n              vote_counts={vote_counts}\r\n              vote_avgs={vote_avgs}\r\n            />\r\n          </div>\r\n        </div>\r\n        <WarningMessage\r\n          open={warningMessageOpen}\r\n          text={warningMessageText}\r\n          onWarningClose={this.handleWarningClose}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport style from './moviepage.module.css';\n\n\nexport default class MoviePage extends Component {\n  render() {\n    const { title, poster_path, release_date, description, vote_count } = this.props.location.state;\n    const popularity = parseFloat(this.props.location.state[\"popularity\"]).toFixed(2);\n    const vote_avg = parseFloat(this.props.location.state[\"vote_avg\"]).toFixed(2);\n    return (\n      <main id=\"movieContent\" >\n        <div className={style.moviePageWrapper}>\n          <div className={style.movieContainer}>\n            <div className=\"movieImgContainer\">\n              <img className={style.moviePoster} src={poster_path} alt={`${title} poster`} />\n            </div>\n            <div className={style.movieInfoContainer}>\n              <div className=\"movieTitleContianer\">\n                <h1 className={style.movieTitle}>{title}</h1>\n              </div>\n              <div className={style.movieReleaseContainer}>\n                <b className={style.movieStatsLabel}>realese date: </b>\n                <div className={style.movieStatsValue}>{release_date}</div>\n              </div>\n              <div className={style.movieOverviewContainer}>\n                <h3 className={style.movieOverviewLabel}>Synopsis</h3>\n                <p className={style.movieOverview}>{description}</p>\n              </div>\n              <div className={style.movieStats}>\n                <div className={style.movieStatsContainer}>\n                  <b className={style.movieStatsLabel}>popularity: </b>\n                  <div className={style.movieStatsValue}>{popularity}</div>\n                </div>\n                <div className={style.movieStatsContainer}>\n                  <b className={style.movieStatsLabel}>Total Number of Votes: </b>\n                  <div className={style.movieStatsValue}>{vote_count}</div>\n                </div>\n                <div className={style.movieStatsContainer}>\n                  <b className={style.movieStatsLabel}>Vote Average: </b>\n                  <div className={style.movieStatsValue}>{vote_avg}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\n// import Footer from \"./components/Footer\";\n\n// import Master_Detail from \"./components/Master_Detail\";\n\nimport Registration from \"./components/Registration\";\n\nimport Login from \"./components/Login\";\n\nimport LoginMiddle from \"./components/LoginMiddle\";\n\nimport Dashboard from \"./components/Dashboard\";\n\nimport Logout from \"./components/Logout\";\n\nimport Home from \"./components/Home\";\n\nimport MoviePage from \"./components/MoviePage\";\n\n// import List from \"./components/List\";\n\n// import Grid from \"./components/Grid\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          {/* <Route exact path=\"/\" component={Master_Detail} /> */}\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/registration\" component={Registration} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/loginmiddle\" component={LoginMiddle} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/movie/:title\" component={MoviePage} />\n          {/* <Route path=\"/List\" component={List} /> */}\n          {/* <Route path=\"/Grid\" component={Grid} /> */}\n        </Switch>\n        {/* <Footer /> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**  \r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached \r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviePageWrapper\":\"moviepage_moviePageWrapper__3kmBJ\",\"movieContainer\":\"moviepage_movieContainer__3INua\",\"movieInfoContainer\":\"moviepage_movieInfoContainer__2WlBI\",\"movieTitle\":\"moviepage_movieTitle__37MsM\",\"movieOverviewContainer\":\"moviepage_movieOverviewContainer__3dlWM\",\"movieOverviewLabel\":\"moviepage_movieOverviewLabel__1JUkz\",\"movieOverview\":\"moviepage_movieOverview__Z0fsW\",\"movieStats\":\"moviepage_movieStats__1C8AF\",\"movieStatsLabel\":\"moviepage_movieStatsLabel__1Izgb\",\"movieReleaseContainer\":\"moviepage_movieReleaseContainer__26VRO\",\"movieStatsValue\":\"moviepage_movieStatsValue__TiMrl\",\"movieStatsContainer\":\"moviepage_movieStatsContainer__1gSss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__leaje\",\"wrapper\":\"login_wrapper__1C9Og\",\"heading\":\"login_heading__3-yeq\",\"formContainer\":\"login_formContainer__Haaqn\",\"formGroup\":\"login_formGroup__Htvj-\",\"submitContainer\":\"login_submitContainer__3g2j0\",\"noAccContainer\":\"login_noAccContainer__3LNLV\",\"noAccText\":\"login_noAccText__3spzc\",\"guestFormContainer\":\"login_guestFormContainer__3OG6r\",\"formGroupGuest\":\"login_formGroupGuest__r1pI6\",\"submitContainerGuest\":\"login_submitContainerGuest__1lfpq\"};"],"sourceRoot":""}